===============================================
Customer Dimension
===============================================
drop sequence cust_dim_seq;

create sequence cust_dim_seq
start with 10001
increment by 1;

DROP TABLE CUSTOMER_dim;
CREATE TABLE CUSTOMER_dim(
customer_key number(7) NOT NULL,
CUSTOMER_ID  NUMBER(7) NOT NULL,
 NAME  VARCHAR2(30) NOT NULL,
 CREDIT_LIMIT NUMBER(8,2) NOT NULL,
 CITY VARCHAR2(19),
 STATE VARCHAR2(17),
 DOB DATE NOT NULL,
 GENDER CHAR(1) NOT NULL,
PRIMARY KEY(customer_key)
);

insert into CUSTOMER_dim
select cust_dim_seq.nextval,
       customer_id, 
       substr(name,1,30),
       CREDIT_LIMIT,
       city,
       state,
       DOB,
       gender
from customers;
===============================================
Date Dimension
===============================================
create sequence date_seq
start with 1001
increment by 1;

DECLARE
      v_startDate date := to_date('01/01/2018','dd/mm/yyyy');
      v_endDate   date := to_date('28/02/2023','dd/mm/yyyy');
      v_day_of_week      number(1);
      v_day_number_mth   number(2);
      v_day_number_year  number(3);
      v_last_day_mth_ind char(1);
      v_week_end_date    date;
      v_week_in_year     number(2);
      v_month_name       varchar(9);
      v_month_number     number(2);
      v_cal_year_mth     char(7);
      v_cal_quarter      char(2);
      v_cal_year_qtr     char(6);
      v_cal_year         number(4);
      v_holiday_ind      char(1);
      v_weekDay_ind      char(1);
BEGIN
      v_holiday_ind := 'N'; -- default value
      WHILE (v_startDate <= v_endDate) LOOP

      v_day_of_week      := TO_CHAR(v_startDate, 'D');
      v_day_number_mth   := TO_CHAR(v_startDate, 'DD');
      v_day_number_year  := TO_CHAR(v_startDate, 'DDD');     
      v_week_in_year     := TO_CHAR(v_startDate, 'IW');
      v_month_name       := TO_CHAR(v_startDate, 'MONTH');
      v_month_number     := TO_CHAR(v_startDate, 'MM');
      v_cal_year_mth     := TO_CHAR(v_startDate, 'YYYY-MM');
      v_cal_year         := TO_CHAR(v_startDate, 'YYYY');
      v_week_end_date    := v_startDate + (7 - v_day_of_week);


      IF (v_startDate = LAST_DAY(v_startDate)) THEN
	v_last_day_mth_ind := 'Y';
      ELSE
	v_last_day_mth_ind := 'N';
      END IF;

      IF (v_day_of_week BETWEEN 2 AND 6) THEN
	v_weekDay_ind := 'Y';
      ELSE
	v_weekDay_ind := 'N';
      END IF;

      IF (v_month_number <= 3) THEN
	v_cal_quarter := 'Q1';
      ELSIF (v_month_number <= 6) THEN
	v_cal_quarter := 'Q2';
      ELSIF (v_month_number <= 9) THEN
	v_cal_quarter := 'Q3';
      ELSE
	v_cal_quarter := 'Q4';
      END IF;

      v_cal_year_qtr := v_cal_year || v_cal_quarter;

	INSERT INTO DATE_dim values(
			date_seq.nextval,
			v_startDate,
      			v_day_of_week,      
      			v_day_number_mth,  
      			v_day_number_year,  
      			v_last_day_mth_ind, 
      			v_week_end_date,   
      			v_week_in_year,    
      			v_month_name,       
      			v_month_number,     
      			v_cal_year_mth,     
      			v_cal_quarter,     
      			v_cal_year_qtr,     
      			v_cal_year,         
     		 	v_holiday_ind,      
      			v_weekDay_ind      
			);

	v_startDate := v_startDate + 1;
      END LOOP;

END;
/
===============================================
Products Dimension
===============================================
DROP SEQUENCE product_seq;
CREATE SEQUENCE product_seq
START WITH 100001
INCREMENT BY 1;
DROP TABLE products_dim;
CREATE TABLE products_dim(
product_key number(7) NOT NULL,
product_ID number(7) NOT NULL,
product_Name varchar2(55) NOT NULL,
DESCRIPTION varchar2(70) NOT NULL,
STANDARD_COST number(9,2) NOT NULL,
LIST_PRICE number(9,2) NOT NULL,
CATEGORY_ID number(7) NOT NULL,
PRIMARY KEY(product_key)
);
INSERT INTO products_dim
SELECT product_seq.nextval,
product_ID, product_Name, DESCRIPTION,
STANDARD_COST, LIST_PRICE, CATEGORY_ID
FROM products;

===============================================
Employee Dimension
===============================================
DROP SEQUENCE emp_seq;
CREATE SEQUENCE emp_seq
START WITH 10001
INCREMENT BY 1;
DROP TABLE employees_dim;
CREATE TABLE employees_dim(
employee_key number(7) NOT NULL,
EMPLOYEE_ID number(7) NOT NULL,
FIRST_NAME varchar2(15),
LAST_NAME varchar2(15),
HIRE_DATE date,
job_Title varchar2(40),
PRIMARY KEY(employee_key)
);
INSERT INTO employees_dim
SELECT product_seq.nextval,
EMPLOYEE_ID, FIRST_NAME, LAST_NAME,
HIRE_DATE, job_Title
FROM employees;
=======================================================================================
Script for Subsequent Loading
=======================================================================================
1.Product Dimension
INSERT INTO products_dim
SELECT product_seq.nextval, PRODUCT_ID, PRODUCT_NAME, DESCRIPTION, STANDARD_COST, LIST_PRICE, CATEGORY_ID
FROM products
WHERE PRODUCT_ID NOT IN (SELECT PRODUCT_ID FROM products_dim);

2.Employee Dimension
INSERT INTO employees_dim
SELECT emp_seq.nextval,
EMPLOYEE_ID, FIRST_NAME, LAST_NAME, HIRE_DATE, JOB_TITLE
FROM employees
WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM
employees_dim);

3.Date Dimension
ALTER SESSION SET NLS_DATE_FORMAT='DD/MM/YYYY';
CREATE OR REPLACE VIEW date_dim_view AS
SELECT *
FROM date_dim;
SELECT * FROM date_dim;

==============================================================================================
Slowly Changing Dimension Type 2
==============================================================================================
ALTER SESSION SET NLS_DATE_FORMAT ='dd/mm/yyyy';
â€“-create column in CUSTOMER_dim
ALTER TABLE CUSTOMER_dim
ADD startDate date DEFAULT '01/01/2017' NOT NULL;
ALTER TABLE CUSTOMER_dim
ADD endDate date DEFAULT '31/12/9999' NOT NULL;
ALTER TABLE CUSTOMER_dim
ADD activeFlag char(1) DEFAULT 'Y' NOT NULL;
CREATE OR REPLACE PROCEDURE Update_Cust(IN_customer_id IN NUMBER,
IN_startDate IN DATE) IS
CURSOR cust_cur is
SELECT customer_id, name, CREDIT_LIMIT, city, state, DOB, gender 
FROM CUSTOMER_dim
WHERE customer_id = IN_customer_id;
cust_rec cust_cur%ROWTYPE;
BEGIN
OPEN cust_cur;
LOOP
FETCH cust_cur INTO cust_rec;
EXIT WHEN cust_cur%NOTFOUND;
Update CUSTOMER_dim SET endDate =
TO_DATE(IN_startDate,'dd/mm/yyyy' )- 1, activeFlag = 'N'
WHERE customer_id = IN_customer_id;

INSERT INTO CUSTOMER_dim VALUES (cust_seq.nextval,
IN_customer_id,
cust_rec.name,
cust_rec.city,
cust_rec.CREDIT_LIMIT,
cust_rec.state,
cust_rec.DOB,
cust_rec.gender,
IN_startDate,
'31/12/9999',
'Y');

DBMS_OUTPUT.PUT_LINE('customer_id:'||cust_rec.customer_id
||' startDate: ' ||IN_startDate);

END LOOP;
CLOSE cust_cur;
END;
/
==============================================================================================




